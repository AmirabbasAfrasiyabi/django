"""
Django settings for wellness project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# print('my first environment variable is: ')
# print(os.getenv('MY_VAR', 'xxxxxxxxxxxxxxxxx.........'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w(tsa=%b7k*zi^2q&z7ns_uj$t$eg*e+t+nj9grxg*x07m-u#d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    # local apps
    'authapp.apps.AuthappConfig',
    'index.apps.IndexConfig',
    'manager.apps.ManagerConfig',
    'news.apps.NewsConfig',
    'quiz.apps.QuizConfig',
    'reservation.apps.ReservationConfig',
    'services.apps.ServicesConfig',
    'shop.apps.ShopConfig',
    'specialists.apps.SpecialistsConfig',
    'ticket.apps.TicketConfig',
    'zarinpal.apps.ZarinpalConfig',
    # third-party apps
    'rest_framework',
    'django_filters',
    'django_jalali',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'wellness.custommiddleware.GetGuitarists',
]

ROOT_URLCONF = 'wellness.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'wellness/templates',
            'index/templates',
            'authapp/templates',
            'services/templates',
            'reservation/templates',
            'quiz/templates',
            'ticket/templates',
            'news/templates',
            'shop/templates',
            'zarinpal/templates',
            'manager/templates',
            'specialists/templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'custom_file_field_tags': 'index.templatetags.custom_file_field_tags',
            }
        },
    },
]
## STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

WSGI_APPLICATION = 'wellness.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE'  : 'django.db.backends.postgresql_psycopg2',
        'NAME'    : 'iranwell_mydb',
        'USER'    : 'iranwell_maryam',
        'PASSWORD': 'M13121371m',
        'HOST'    : 'localhost',
        'PORT'    : '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'fa'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

USE_TZ = True


#----------------------------------------------------------------------------------
#                            STATIC and MEDIA PATH
#----------------------------------------------------------------------------------
STATIC_URL = '/static/'
STATIC_ROOT = '/home2/iranwell/public_html/static'

MEDIA_URL = '/media/'
MEDIA_ROOT = '/home2/iranwell/public_html/media'

#----------------------------------------------------------------------------------


#----------------------------------------------------------------------------------
#                                LOGIN SETTINGS
#----------------------------------------------------------------------------------
LOGIN_REDIRECT_URL='/dashboard/'
LOGIN_URL ='/login/'

#----------------------------------------------------------------------------------


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# Host for sending e-mail.
EMAIL_HOST = 'smtp.gmail.com'

# Port for sending e-mail.
EMAIL_PORT = 587

# Optional SMTP authentication information for EMAIL_HOST.
# EMAIL_HOST_USER = 'mm.74noroozi'
EMAIL_HOST_PASSWORD = 'gagetasceramic'
EMAIL_USE_TLS = True


#----------------------------------------------------------------------------------
#                             django rest framework settings
#----------------------------------------------------------------------------------
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
}

